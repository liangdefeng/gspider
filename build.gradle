group 'xyz.itbang'
version '3.1.1'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'


//apply plugin: 'signing' //使用signing plugin做数字签名

sourceCompatibility = 1.8

repositories {
    maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.10'
    compile 'org.jsoup:jsoup:1.10.2'
    compile 'org.slf4j:slf4j-api:1.7.22'

    //jetty
    compile 'org.eclipse.jetty.aggregate:jetty-all:9.4.5.v20170502'//hessian
    compile 'com.caucho:hessian:4.0.38'

    runtime 'ch.qos.logback:logback-classic:1.2.1'

    testCompile 'junit:junit:4.11'

    //for test
    //testCompile "org.bitbucket.cowwoc:diff-match-patch:1.1"
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: userName, password: password)
            }

            pom.project {
                name "gspider"
                packaging 'jar'
                description 'a groovy spider.'
                url 'https://github.com/yanq/gspider'

                scm {
                    url 'https://github.com/yanq/gspider.git'
                    connection 'https://github.com/yanq/gspider.git'
                    developerConnection 'https://github.com/yanq/gspider.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'JackYan'
                        name 'Jack Yan'
                    }
                }
            }
        }
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}



eclipse.classpath.file {
	whenMerged { classpath ->
		classpath.entries.findAll { entry -> entry.kind == 'lib' }*.exported = false
	}
}

//signing {
//    sign configurations.archives
//}